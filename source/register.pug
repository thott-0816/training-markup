extends modules/layout/_page-other

block head
  +head('Register')

block main
  .d-flex.justify-content-center.align-items-center.mt-3.mb-3
    .card.ml-2.mr-2
      .card-header.bg-white
        h4 Logo PF
      .card-body.bg-light
        h5.card-title.text-left Register
        .border-top.pb-2.pt-3
          .step
            .pb-2
              ul.step__bar.js-steps.d-in-line-block
                each val in [1, 2, 3, 4, 5]
                  +step('Step ' + val)
            .step__contents
              #step1.step__content.js-step-content
                .bg-white.rounded.shadow-sm.p-3.mb-3
                  +form-inputs({
                    attribute: 'email',
                    labelText: 'Email address',
                    placeholder: 'example@email.com',
                  })(class='text-left')
                +buttons({
                  text: 'Confirm',
                  type: 'orange'
                })(class='w-50 mb-2' data-show='#step2').js-switching
              #step2.step__content.js-step-content
                .text-left.mb-3
                  h4 Mail address
                  p This email is automatically sent to the email address you entered. Please note that membership registration has not been completed yet.
                  | Click the URL below to continue membership registration.
                  .bg-white.rounded.shadow-sm.p-3.mb-3.mt-3
                    +form-info({
                      label: 'Email',
                      value: 'example@email.com'
                    })
                +buttons-link({
                  text: 'Next',
                  type: 'primary'
                })(class='w-50 mb-2' data-show='#step3').js-switching
                br
                +buttons-link({
                  text: 'Back',
                  type: 'light-gray'
                })(class='w-50 mb-2' data-show='#step1').js-switching
              #step3.step__content.js-step-content
                .text-danger
                  span Error:
                  -
                    var errorList = ['Error1', 'Error2', 'Error3']
                  each item in errorList
                    li= item
                h6.text-left.mt-3 Account Info
                .border-top.pb-2.pt-3
                  .bg-white.rounded.shadow-sm.text-left.p-3.mb-3
                    form.form
                      .form-group
                        +form-info({
                          label: 'Email',
                          value: 'example@email.com'
                        })
                      +form-inputs({
                        attribute: 'password',
                        labelText: 'Password',
                        placeholder: '123456',
                        isInvalid: true,
                        invalidMessage: "Data Invalid",
                        noteMessage: "6 - 32 characters", 
                        isRequired: true
                      })
                      .border-top.pt-3
                        .form-group
                          +label-required('Gender')                          
                          -
                            var genderList = [
                              {
                                id: 'genderMale',
                                labelOption: 'Male',
                                isChecked: true
                              },
                              {
                                id: 'genderFemale',
                                labelOption: 'Female'
                              }
                            ]
                          .d-block
                            each item in genderList
                                +form-radio-button({
                                  id: item.id,
                                  labelOption: item.labelOption,
                                  fieldName: "gender",
                                  isChecked: item.isChecked
                                })
                      .border-top.pb-1.pt-3
                        .form-group
                          +label-required('Date of birth')
                          -
                            var dateLabels = [ 'Year', 'Month', 'Day']
                          .d-flex.align-items-center.mb-2
                            each item in dateLabels
                              input.form-control.is-invalid(name= item)
                              label.mt-2.pl-1.pr-1= item
                          each item in dateLabels
                            .text-danger= `! ${item} invalid`
                          .text-muted= '* yyyy year mm month dd day'
                      .border-top.pb-1.pt-3
                        .form-group
                          +label-required('Zip code')
                          .d-flex
                            input.form-control.is-invalid.mr-3(name= 'zipcode1')
                            input.form-control.is-invalid(name= 'zipcode2')
                      .border-top.pb-1.pt-3
                        .form-group
                          +label-required('Register user type')
                          -
                            var userTyperList = [
                              {
                                id: 'Personal',
                                labelOption: 'Personal',
                                isChecked: true
                              },
                              {
                                id: 'Protector',
                                labelOption: 'Protector'
                              },
                              {
                                id: 'personOfSchool',
                                labelOption: 'Person of school'
                              },
                              {
                                id: 'Orther',
                                labelOption: 'Orther'
                              }
                            ]
                          .d-block
                            each item in userTyperList
                                +form-radio-button({
                                  id: item.id,
                                  labelOption: item.labelOption,
                                  fieldName: "userTyper",
                                  isChecked: item.isChecked
                                })
                      .border-top.pb-1.pt-3
                        .form-group
                          +label-required('Notification')
                          +form-checkbox({
                            id: 'emailNotification',
                            labelText: 'Email Notification'
                          })(class="mb-2")
                          +form-checkbox({
                            id: 'postOfficeNotification',
                            labelText: 'Remember me'
                          })
                +buttons-link({
                  text: 'Next',
                  type: 'primary'
                })(class='w-50 mb-2' data-show='#step4').js-switching
                br
                +buttons-link({
                  text: 'Back',
                  type: 'light-gray'
                })(class='w-50 mb-2' data-show='#step2').js-switching
              #step4.step__content.js-step-content
                h6.text-left.mb-3 User Info
                .border-top.pt-2
                .bg-white.rounded.shadow-sm.p-3.mb-3.mt-2
                  -
                    var userInfoList = [
                      {
                        label: 'Email',
                        value: 'example@email.com'
                      },
                      {
                        label: 'Password',
                        value: '******',
                        isBorderTop: true
                      },
                      {
                        label: 'Gender',
                        value: 'Male',
                        isBorderTop: true
                      },
                      {
                        label: 'Gender',
                        value: 'Male',
                        isBorderTop: true
                      },
                      {
                        label: 'Date of birth',
                        value: '01/01/1999',
                        isBorderTop: true
                      },
                      {
                        label: 'Zipcode Haft Width',
                        value: '248-0012',
                        isBorderTop: true
                      },
                      {
                        label: 'User type',
                        value: 'Personal',
                        isBorderTop: true
                      },
                      {
                        label: 'Noti',
                        value: 'Email',
                        isBorderTop: true
                      }                     
                    ]
                  each item in userInfoList
                    +form-info({
                      label: item.label,
                      value: item.value,
                      isBorderTop: item.isBorderTop
                    })
                +buttons-link({
                  text: 'Next',
                  type: 'primary'
                })(class='w-50 mb-2' data-show='#step5').js-switching
                br
                +buttons-link({
                  text: 'Back',
                  type: 'light-gray'
                })(class='w-50 mb-2' data-show='#step3').js-switching
              #step5.step__content.js-step-content
                .bg-white.rounded.shadow-sm.p-3.mb-3.mt-2
                  h6.pb-2 You have created your account, thank you!
                  +buttons-link({
                    text: 'Start study gear',
                    type: 'primary',
                    size: 'border-radius-6'
                  })(class='w-50 mb-2' name='submit', value='Submit')
        .border-top.pb-3.pt-3
          h6.font-weight-bold(for='email') Login via
          .d-flex.flex-column.ml-4.mr-4
            -
              var loginViaList = [
                {
                  text: 'Login via Apple ID',
                  image_url: 'https://cdn.iconscout.com/icon/free/png-256/apple-ios-logo-mac-os-platform-system-5-4741.png'
                },
                {
                  text: 'Login via Line ID',
                  image_url: 'https://cdn.worldvectorlogo.com/logos/line-messenger.svg'
                },
                {
                  text: 'Login via Twitter ID',
                  image_url: 'https://exb5r2e7mwhhm1x2vvwfd1cy-wpengine.netdna-ssl.com/wp-content/uploads/2020/02/twitter-app-icon-transparent-17-2.png'
                },
                {
                  text: 'Login via Facebook ID',
                  image_url: 'https://cdn.iconscout.com/icon/free/png-256/facebook-224-498412.png'
                },
                {
                  text: 'Login via Pasnavi ID',
                  image_url: 'https://passnavi.evidus.com/images/common/ico_megamenu_top.png'
                }
              ]
            each item in loginViaList
              +buttons-link({
                text: item.text,
                logoImageUrl: item.image_url,
                isFull: true,
                fontSize: '14'
              })(class='justify-content-start text-dark font-weight-normal bg-white border mt-1')
        .border-top.pt-3
          h5 Footer
